#Вычислить сумму знакопеременного ряда (|х(2n)|) /(2n)!, где х-матрица ранга к (к и матрица задаются случайным образом), n - номер слагаемого. 
#Сумма считается вычисленной, если точность вычислений будет не меньше t знаков после запятой. У алгоритма д.б. линейная сложность. Операция умножения – поэлементная. 
#Знак первого слагаемого - случайный. Элементы матрицы от -1 до +1

import random
import numpy as np
from decimal import Decimal, getcontext

# Функция, которая вычисляет сумму ряда с заданной точностью
def s_znak(t):
    n = 1  # Номер слагаемого
    tec_x = x.copy()  # Текущая матрица (копия матрицы)
    factorial = 1  # Накопляемый факториал
    res = 0  # Результат вычислений
    znak = random.choice([-1, 1])  #Переменная для смены знака

    while True:
        curr_term = Decimal(np.linalg.det(np.linalg.matrix_power(tec_x, 2*n)) / factorial)  # Вычисление текущего члена ряда
        res += znak * curr_term  # Прибавляем его к результату с учетом знака

        # Проверка точности
        if abs(curr_term) < 1 / (10 ** t):
            break

        # Меняем параметры для следующего слагаемого
        n += 1  # увеличиваем номер слагаемого
        znak = -znak  # меняем знак
        factorial *= 2 * n  # вычисляем факториал
    return res

try:
    # Ввод значения t 
    print("Введите число t, являющееся количеством знаков после запятой:")
    t = int(input())
    while t > 300 or t < 1:  # ошибка в случае введения слишком малой точности
        t = int(input("Вы ввели число, неподходящее по условию, введите число t, большее или равное 1, но иеньше 300:\n"))
    print()

    k = random.randint(2, 10)  # задание ранга матрицы
    x = np.round(np.random.uniform(-1, 1, (k, k)), 3)  # создание матрицы (элементы матрицы от -1 до +1)

    # Cформированная матрица
    print("Случайно сгенерированная матрица:")
    print(x)

    # Точность вычислений
    getcontext().prec = t

    # Вызов функции s_znak для вычисления суммы ряда с точностью t
    result = s_znak(t)

    # Вывод результата
    print(f"Сумма ряда с точностью {t} знаков после запятой: {result:.{t}f}")

except ValueError:
    print("\nВведенный символ не является числом. Перезапустите программу и введите число.")
